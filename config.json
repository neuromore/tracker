{
    "Domains": [
        "dev.sfproductlabs.com"
    ],
    "SchemaVersion": 2,
    "ApiVersion": 1,
    "StaticDirectory": "public",
    "ProxyUrl": "http://localhost:3030",
    "UseLocalTLS": true,
    "TLSCert" : "./.setup/keys/example/server.crt",
    "TLSKey" : "./.setup/keys/example/server.key",
    "ProxyPortTLS" : ":8443",
    "ProxyPortRedirect" : "",
    "ProxyPort" : ":8080",
    "ProxyDailyLimit" : 0,
    "ProxyDailyLimitChecker" : "cassandra",
    "IgnoreProxyOptions" : false,
    "ProxyUrlFilter" : ".*(dontlogthese|login|css|js|json|jpeg|jpg|gif|png|ico)",
    "ProxyForceJson" : false,
    "MaximumConnections": 150000,
    "PrefixPrivateHash" : "",
    "ReadTimeoutSeconds" : 20,
    "ReadHeaderTimeoutSeconds" : 20,
    "WriteTimeoutSeconds" : 20,
    "IdleTimeoutSeconds" : 20,
    "MaxHeaderBytes" : 1048576,
    "AllowOrigin": "*",
    "DefaultRedirect": "https://sfproductlabs.com",
    "Debug" : true,
    "UrlFilter" : "http(s|)://(api|tr|dev|spark|)(\\.staging\\.|\\.|)(sfproductlabs\\.com|localhost)(:[0-9]*|)(/[^\\?#]*)(\\?|#|)",
    "UrlFilterMatchGroup" : 6,
    "IgnoreQueryParamsKey" : "igqp",
    "AccountHashMixer" : "",
    "Notify": [
        {
            "Service": "cassandra",
            "Connections" : 2,
            "Hosts": [
                "127.0.0.1"
            ],
            "Context": "sfpla",
            "Timeout" : 300,
            "CACert": "./.setup/keys/staging/rootCa.crt",
            "Cert": "./.setup/keys/staging/cassandra-client.crt",
            "Key": "./.setup/keys/staging/cassandra-client.key",
            "Secure": false,
            "Retry": false,
            "Critical" :true,
            "Filter": [
                {
                    "Alias": "log",
                    "Id": "log",
                    "Queries": [
                        {
                            "Statement": "INSERT INTO logs JSON ?",
                            "QueryType": "json",
                            "Fields": [
                                {
                                    "Type": "string",
                                    "Id": "name"
                                },
                                {
                                    "Type": "string",
                                    "Id": "hostname"
                                },
                                {
                                    "Type": "int",
                                    "Id": "level"
                                },
                                {
                                    "Type": "string",
                                    "Id": "msg"
                                },
                                {
                                    "Type": "string",
                                    "Id": "ip"
                                },
                                {
                                    "Type": "string",
                                    "Id": "username"
                                },
                                {
                                    "Type": "date",
                                    "Id": "ldate"
                                },
                                {
                                    "Type": "time",
                                    "Id": "ltime"
                                }
                            ]
                        }
                    ]
                },
                {
                    "Alias": "count",
                    "Id": "count",
                    "Queries": [
                        {
                            "Statement": "UPDATE counters set total=total+1 where id=? AND type=?",
                            "Fields": [
                                {
                                    "Type": "string",
                                    "Id": "id"
                                },
                                {
                                    "Type": "string",
                                    "Id": "type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "Alias": "update",
                    "Id": "update",
                    "Queries": [
                        {
                            "Statement" : "INSERT INTO updates (id, updated, msg) values (?,?,?)",
                            "Fields": [
                                {
                                    "Type": "string",
                                    "Id": "id",
                                    "Default": "id"                                    
                                },
                                {
                                    "Type": "datetime",
                                    "Id": "updated"
                                },
                                {
                                    "Type": "string",
                                    "Id": "msg"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "Service": "nats",
            "Hosts": [
                "tls://localhost:4222"
            ],
            "Context": "toc.track.notify",
            "Secure": true,
            "CACert": "./.setup/keys/staging/rootCa.crt",
            "Cert": "./.setup/keys/staging/nats-client.crt",
            "Key": "./.setup/keys/staging/nats-client.key",
            "Format": "json"
        }
    ],
    "Consume": [
        {
            "Service": "http",
            "Note": "Not implemented"
        },
        {
            "Service": "nats",
            "Hosts": [
                "tls://localhost:4222"
            ],
            "Secure": true,
            "Critical" : true,
            "CACert": "./.setup/keys/staging/rootCa.crt",
            "Cert": "./.setup/keys/staging/nats-client.crt",
            "Key": "./.setup/keys/staging/nats-client.key",
            "Format": "json",
            "MessageLimit": 65536,
            "ByteLimit": 67108864,
            "Filter": [
                {
                    "Alias": "log",
                    "Type": "chan",
                    "Id": "tic.log.>"
                },
                {
                    "Alias": "count",
                    "Type": "chan",
                    "Id": "tic.count.>"
                },
                {
                    "Alias": "update",
                    "Type": "chan",
                    "Id": "tic.update.>"
                }
            ]
        }
    ]
}
